{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/hooks.ts"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"names":[],"mappings":";;;;AAAA;;;AAIO,MAAM,iBAAiB;;IAAM,OAAA,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;AAAe;GAAhD;;QAAuB,4JAAA,CAAA,cAAW;;;AACxC,MAAM,iBAAkD,4JAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { \n  Container, \n  Paper, \n  TextField, \n  Button, \n  Typography, \n  Box, \n  Alert \n} from '@mui/material';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useAppDispatch } from '../../lib/hooks';\nimport { loginUser } from '../../lib/features/auth/authSlice';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n});\n\nexport default function LoginPage() {\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (values: { email: string; password: string }) => {\n    try {\n      setError('');\n      const result = await dispatch(loginUser(values));\n      \n      if (result.meta.requestStatus === 'fulfilled') {\n        // Small delay to ensure Redux state is updated\n        setTimeout(() => {\n          router.replace('/dashboard');\n        }, 100);\n      } else if (result.meta.requestStatus === 'rejected') {\n        setError(result.error?.message || 'Invalid credentials');\n      } else {\n        setError('Login failed. Please try again.');\n      }\n    } catch (error) {\n      setError('Login failed. Please try again.');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\n      <Paper elevation={3} sx={{ p: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" textAlign=\"center\" gutterBottom>\n          Login\n        </Typography>\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <Box sx={{ mb: 2 }}>\n                <Field\n                  as={TextField}\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  fullWidth\n                  error={touched.email && errors.email}\n                  helperText={touched.email && errors.email}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Field\n                  as={TextField}\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                  error={touched.password && errors.password}\n                  helperText={touched.password && errors.password}\n                />\n              </Box>\n              \n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                fullWidth\n                size=\"large\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Logging in...' : 'Login'}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    </Container>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;;;AAhBA;;;;;;;;AAkBA,MAAM,mBAAmB,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,EAAE;IAClC,OAAO,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC,yBAAyB,QAAQ,CAAC;IAC5D,UAAU,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,GAAG,CAAC,GAAG,0CAA0C,QAAQ,CAAC;AACnF;AAEe,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD;IAC9B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,SAAS;YACT,MAAM,SAAS,MAAM,SAAS,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAD,EAAE;YAExC,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,aAAa;gBAC7C,+CAA+C;gBAC/C,WAAW;oBACT,OAAO,OAAO,CAAC;gBACjB,GAAG;YACL,OAAO,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,YAAY;gBACnD,SAAS,OAAO,KAAK,EAAE,WAAW;YACpC,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,SAAS;QACX;IACF;IAEA,qBACE,6LAAC,6MAAA,CAAA,YAAS;QAAC,UAAS;QAAK,IAAI;YAAE,IAAI;QAAE;kBACnC,cAAA,6LAAC,iMAAA,CAAA,QAAK;YAAC,WAAW;YAAG,IAAI;gBAAE,GAAG;YAAE;;8BAC9B,6LAAC,gNAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,WAAU;oBAAK,WAAU;oBAAS,YAAY;8BAAC;;;;;;gBAIvE,uBACC,6LAAC,iMAAA,CAAA,QAAK;oBAAC,UAAS;oBAAQ,IAAI;wBAAE,IAAI;oBAAE;8BACjC;;;;;;8BAIL,6LAAC,kJAAA,CAAA,SAAM;oBACL,eAAe;wBAAE,OAAO;wBAAI,UAAU;oBAAG;oBACzC,kBAAkB;oBAClB,UAAU;8BAET,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,iBACjC,6LAAC,kJAAA,CAAA,OAAI;;8CACH,6LAAC,2LAAA,CAAA,MAAG;oCAAC,IAAI;wCAAE,IAAI;oCAAE;8CACf,cAAA,6LAAC,kJAAA,CAAA,QAAK;wCACJ,IAAI,6MAAA,CAAA,YAAS;wCACb,MAAK;wCACL,OAAM;wCACN,MAAK;wCACL,SAAS;wCACT,OAAO,QAAQ,KAAK,IAAI,OAAO,KAAK;wCACpC,YAAY,QAAQ,KAAK,IAAI,OAAO,KAAK;;;;;;;;;;;8CAI7C,6LAAC,2LAAA,CAAA,MAAG;oCAAC,IAAI;wCAAE,IAAI;oCAAE;8CACf,cAAA,6LAAC,kJAAA,CAAA,QAAK;wCACJ,IAAI,6MAAA,CAAA,YAAS;wCACb,MAAK;wCACL,OAAM;wCACN,MAAK;wCACL,SAAS;wCACT,OAAO,QAAQ,QAAQ,IAAI,OAAO,QAAQ;wCAC1C,YAAY,QAAQ,QAAQ,IAAI,OAAO,QAAQ;;;;;;;;;;;8CAInD,6LAAC,oMAAA,CAAA,SAAM;oCACL,MAAK;oCACL,SAAQ;oCACR,SAAS;oCACT,MAAK;oCACL,UAAU;8CAET,eAAe,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQlD;GApFwB;;QACL,sHAAA,CAAA,iBAAc;QAChB,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}