{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/app/debug/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Container, Paper, Button, Typography, Box, Alert } from '@mui/material';\nimport { authService } from '../../lib/services/auth.service';\n\nexport default function DebugPage() {\n  const [result, setResult] = useState<any>(null);\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState(false);\n\n  const testConnection = async () => {\n    setLoading(true);\n    setError('');\n    setResult(null);\n    \n    try {\n      console.log('ðŸ§ª Testing API connection...');\n      const response = await fetch('http://localhost:5001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: 'test@example.com',\n          password: 'password123'\n        })\n      });\n      \n      console.log('ðŸ“¡ Raw response:', response);\n      console.log('âœ… Response status:', response.status);\n      console.log('ðŸ“‹ Response headers:', Object.fromEntries(response.headers.entries()));\n      \n      const data = await response.json();\n      console.log('ðŸ“„ Response data:', data);\n      \n      setResult({\n        status: response.status,\n        statusText: response.statusText,\n        data: data\n      });\n      \n    } catch (err: any) {\n      console.error('ðŸ’¥ Test connection failed:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const testAuthService = async () => {\n    setLoading(true);\n    setError('');\n    setResult(null);\n    \n    try {\n      console.log('ðŸ§ª Testing AuthService...');\n      const response = await authService.login({\n        email: 'test@example.com',\n        password: 'password123'\n      });\n      \n      console.log('ðŸ“¡ AuthService response:', response);\n      setResult({ authService: response });\n      \n    } catch (err: any) {\n      console.error('ðŸ’¥ AuthService test failed:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Paper elevation={3} sx={{ p: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          API Debug Page\n        </Typography>\n        \n        <Box sx={{ mb: 3 }}>\n          <Button \n            variant=\"contained\" \n            onClick={testConnection}\n            disabled={loading}\n            sx={{ mr: 2 }}\n          >\n            Test Raw Fetch\n          </Button>\n          \n          <Button \n            variant=\"outlined\" \n            onClick={testAuthService}\n            disabled={loading}\n          >\n            Test AuthService\n          </Button>\n        </Box>\n        \n        {loading && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            Testing API connection...\n          </Alert>\n        )}\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            <strong>Error:</strong> {error}\n          </Alert>\n        )}\n        \n        {result && (\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Result:\n            </Typography>\n            <Box component=\"pre\" sx={{ \n              bgcolor: 'grey.100', \n              p: 2, \n              borderRadius: 1, \n              overflow: 'auto',\n              fontSize: '0.875rem'\n            }}>\n              {JSON.stringify(result, null, 2)}\n            </Box>\n          </Box>\n        )}\n        \n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Environment Info:\n          </Typography>\n          <Typography variant=\"body2\">\n            API URL: {process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api'}\n          </Typography>\n          <Typography variant=\"body2\">\n            Current Host: {typeof window !== 'undefined' ? window.location.origin : 'Server-side'}\n          </Typography>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}