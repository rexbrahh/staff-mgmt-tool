{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/services/auth.service.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authService = {\n  async login(credentials: { email: string; password: string }) {\n    const response = await api.post('/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n\n  async register(userData: { email: string; password: string; firstName: string; lastName: string }) {\n    const response = await api.post('/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n\n  async getProfile() {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  logout() {\n    localStorage.removeItem('token');\n  },\n\n  getToken() {\n    return localStorage.getItem('token');\n  },\n};"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,UAAU,iEAAmC;AAEnD,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,qCAAqC;AACrC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT;AAEO,MAAM,cAAc;IACzB,MAAM,OAAM,WAAgD;QAC1D,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,eAAe;QAC/C,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;YACvB,aAAa,OAAO,CAAC,SAAS,SAAS,IAAI,CAAC,KAAK;QACnD;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,UAAS,QAAkF;QAC/F,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,kBAAkB;QAClD,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;YACvB,aAAa,OAAO,CAAC,SAAS,SAAS,IAAI,CAAC,KAAK;QACnD;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM;QACJ,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;QAC/B,OAAO,SAAS,IAAI;IACtB;IAEA;QACE,aAAa,UAAU,CAAC;IAC1B;IAEA;QACE,OAAO,aAAa,OAAO,CAAC;IAC9B;AACF","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { authService } from '../../services/auth.service';\n\nexport interface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n};\n\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async (credentials: { email: string; password: string }) => {\n    const response = await authService.login(credentials);\n    return response;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  'auth/register',\n  async (userData: { email: string; password: string; firstName: string; lastName: string }) => {\n    const response = await authService.register(userData);\n    return response;\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      authService.logout();\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    setCredentials: (state, action: PayloadAction<{ user: User; token: string }>) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Login failed';\n      })\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Registration failed';\n      });\n  },\n});\n\nexport const { logout, clearError, setCredentials } = authSlice.actions;\nexport default authSlice.reducer;"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAkBA,MAAM,eAA0B;IAC9B,MAAM;IACN,OAAO;IACP,iBAAiB;IACjB,SAAS;IACT,OAAO;AACT;AAEO,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EACtC,cACA,OAAO;IACL,MAAM,WAAW,MAAM,yIAAA,CAAA,cAAW,CAAC,KAAK,CAAC;IACzC,OAAO;AACT;AAGK,MAAM,eAAe,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EACzC,iBACA,OAAO;IACL,MAAM,WAAW,MAAM,yIAAA,CAAA,cAAW,CAAC,QAAQ,CAAC;IAC5C,OAAO;AACT;AAGF,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,QAAQ,CAAC;YACP,MAAM,IAAI,GAAG;YACb,MAAM,KAAK,GAAG;YACd,MAAM,eAAe,GAAG;YACxB,MAAM,KAAK,GAAG;YACd,yIAAA,CAAA,cAAW,CAAC,MAAM;QACpB;QACA,YAAY,CAAC;YACX,MAAM,KAAK,GAAG;QAChB;QACA,gBAAgB,CAAC,OAAO;YACtB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;YAChC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;YAClC,MAAM,eAAe,GAAG;YACxB,MAAM,KAAK,GAAG;QAChB;IACF;IACA,eAAe,CAAC;QACd,QACG,OAAO,CAAC,UAAU,OAAO,EAAE,CAAC;YAC3B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;YAChC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;YAClC,MAAM,eAAe,GAAG;YACxB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,UAAU,QAAQ,EAAE,CAAC,OAAO;YACnC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC,GACC,OAAO,CAAC,aAAa,OAAO,EAAE,CAAC;YAC9B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,aAAa,SAAS,EAAE,CAAC,OAAO;YACvC,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;YAChC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;YAClC,MAAM,eAAe,GAAG;YACxB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,aAAa,QAAQ,EAAE,CAAC,OAAO;YACtC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IACJ;AACF;AAEO,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,UAAU,OAAO;uCACxD,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './features/auth/authSlice';\n\nexport const makeStore = () => {\n  return configureStore({\n    reducer: {\n      auth: authReducer,\n    },\n  });\n};\n\nexport type AppStore = ReturnType<typeof makeStore>;\nexport type RootState = ReturnType<AppStore['getState']>;\nexport type AppDispatch = AppStore['dispatch'];"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;YACP,MAAM,2IAAA,CAAA,UAAW;QACnB;IACF;AACF","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/providers/StoreProvider.tsx"],"sourcesContent":["'use client';\n\nimport { useRef } from 'react';\nimport { Provider } from 'react-redux';\nimport { makeStore, AppStore } from '../lib/store';\n\nexport function StoreProvider({ children }: { children: React.ReactNode }) {\n  const storeRef = useRef<AppStore | undefined>(undefined);\n  if (!storeRef.current) {\n    storeRef.current = makeStore();\n  }\n\n  return <Provider store={storeRef.current}>{children}</Provider>;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IAC9C,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,SAAS,OAAO,GAAG,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD;IAC7B;IAEA,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/providers/ThemeProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  return (\n    <MUIThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MUIThemeProvider>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAHA;;;;AAKA,MAAM,QAAQ,CAAA,GAAA,2MAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;IACF;AACF;AAEO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,qBACE,8OAAC,+MAAA,CAAA,gBAAgB;QAAC,OAAO;;0BACvB,8OAAC,gNAAA,CAAA,cAAW;;;;;YACX;;;;;;;AAGP","debugId":null}}]
}