{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/services/auth.service.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authService = {\n  async login(credentials: { email: string; password: string }) {\n    console.log('🌐 AuthService: Making API call to:', `${API_URL}/auth/login`);\n    console.log('📧 AuthService: Sending credentials:', { email: credentials.email, password: '***' });\n    \n    try {\n      const response = await api.post('/auth/login', credentials);\n      console.log('📡 AuthService: API response received:', response.data);\n      console.log('✅ AuthService: Response status:', response.status);\n      \n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        console.log('💾 AuthService: Token saved to localStorage');\n        \n        // Also set token in cookies for middleware\n        document.cookie = `token=${response.data.token}; path=/; max-age=${24 * 60 * 60}`; // 24 hours\n        console.log('🍪 AuthService: Token saved to cookies');\n      }\n      \n      return response.data;\n    } catch (error: any) {\n      console.error('🚨 AuthService: API call failed:', error);\n      console.error('📄 Error response data:', error.response?.data);\n      console.error('🔢 Error status:', error.response?.status);\n      console.error('🔗 Error config:', error.config);\n      console.error('💥 Full error object:', error);\n      \n      // Re-throw with more specific error information\n      const errorMessage = error.response?.data?.message || error.message || 'Login failed';\n      const errorStatus = error.response?.status || 'Unknown';\n      \n      console.error('🎯 Throwing error with message:', errorMessage, 'status:', errorStatus);\n      \n      throw new Error(`${errorMessage} (Status: ${errorStatus})`);\n    }\n  },\n\n  async register(userData: { email: string; password: string; firstName: string; lastName: string }) {\n    const response = await api.post('/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      // Also set token in cookies for middleware\n      document.cookie = `token=${response.data.token}; path=/; max-age=${24 * 60 * 60}`; // 24 hours\n    }\n    return response.data;\n  },\n\n  async getProfile() {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  logout() {\n    localStorage.removeItem('token');\n    // Also remove token from cookies\n    document.cookie = 'token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n  },\n\n  getToken() {\n    return localStorage.getItem('token');\n  },\n};"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,UAAU,iEAAmC;AAEnD,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,qCAAqC;AACrC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT;AAEO,MAAM,cAAc;IACzB,MAAM,OAAM,WAAgD;QAC1D,QAAQ,GAAG,CAAC,uCAAuC,GAAG,QAAQ,WAAW,CAAC;QAC1E,QAAQ,GAAG,CAAC,wCAAwC;YAAE,OAAO,YAAY,KAAK;YAAE,UAAU;QAAM;QAEhG,IAAI;YACF,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,eAAe;YAC/C,QAAQ,GAAG,CAAC,0CAA0C,SAAS,IAAI;YACnE,QAAQ,GAAG,CAAC,mCAAmC,SAAS,MAAM;YAE9D,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;gBACvB,aAAa,OAAO,CAAC,SAAS,SAAS,IAAI,CAAC,KAAK;gBACjD,QAAQ,GAAG,CAAC;gBAEZ,2CAA2C;gBAC3C,SAAS,MAAM,GAAG,CAAC,MAAM,EAAE,SAAS,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,KAAK,IAAI,EAAE,WAAW;gBAC9F,QAAQ,GAAG,CAAC;YACd;YAEA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,oCAAoC;YAClD,QAAQ,KAAK,CAAC,2BAA2B,MAAM,QAAQ,EAAE;YACzD,QAAQ,KAAK,CAAC,oBAAoB,MAAM,QAAQ,EAAE;YAClD,QAAQ,KAAK,CAAC,oBAAoB,MAAM,MAAM;YAC9C,QAAQ,KAAK,CAAC,yBAAyB;YAEvC,gDAAgD;YAChD,MAAM,eAAe,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO,IAAI;YACvE,MAAM,cAAc,MAAM,QAAQ,EAAE,UAAU;YAE9C,QAAQ,KAAK,CAAC,mCAAmC,cAAc,WAAW;YAE1E,MAAM,IAAI,MAAM,GAAG,aAAa,UAAU,EAAE,YAAY,CAAC,CAAC;QAC5D;IACF;IAEA,MAAM,UAAS,QAAkF;QAC/F,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,kBAAkB;QAClD,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;YACvB,aAAa,OAAO,CAAC,SAAS,SAAS,IAAI,CAAC,KAAK;YACjD,2CAA2C;YAC3C,SAAS,MAAM,GAAG,CAAC,MAAM,EAAE,SAAS,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,KAAK,IAAI,EAAE,WAAW;QAChG;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM;QACJ,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;QAC/B,OAAO,SAAS,IAAI;IACtB;IAEA;QACE,aAAa,UAAU,CAAC;QACxB,iCAAiC;QACjC,SAAS,MAAM,GAAG;IACpB;IAEA;QACE,OAAO,aAAa,OAAO,CAAC;IAC9B;AACF","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { authService } from '../../services/auth.service';\n\nexport interface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n};\n\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async (credentials: { email: string; password: string }) => {\n    const response = await authService.login(credentials);\n    return response;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  'auth/register',\n  async (userData: { email: string; password: string; firstName: string; lastName: string }) => {\n    const response = await authService.register(userData);\n    return response;\n  }\n);\n\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchProfile',\n  async () => {\n    const response = await authService.getProfile();\n    return response;\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      authService.logout();\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    setCredentials: (state, action: PayloadAction<{ user: User; token: string }>) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    initializeAuth: (state, action: PayloadAction<{ token: string | null }>) => {\n      console.log('🔧 Redux: initializeAuth called with token:', action.payload.token ? 'YES' : 'NO');\n      if (action.payload.token) {\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        console.log('✅ Redux: Auth initialized with token');\n      } else {\n        console.log('❌ Redux: No token found, user not authenticated');\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log('🔄 Redux: loginUser.fulfilled action received:', action.payload);\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n        console.log('✅ Redux: Auth state updated - isAuthenticated:', true);\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Login failed';\n      })\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Registration failed';\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        console.log('👤 Redux: fetchUserProfile.fulfilled, user data:', action.payload);\n        state.user = action.payload.user;\n        state.isAuthenticated = true;\n      })\n      .addCase(fetchUserProfile.rejected, (state) => {\n        // If fetching profile fails, clear authentication\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        authService.logout();\n      });\n  },\n});\n\nexport const { logout, clearError, setCredentials, initializeAuth } = authSlice.actions;\nexport default authSlice.reducer;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './features/auth/authSlice';\n\nexport const makeStore = () => {\n  return configureStore({\n    reducer: {\n      auth: authReducer,\n    },\n  });\n};\n\nexport type AppStore = ReturnType<typeof makeStore>;\nexport type RootState = ReturnType<AppStore['getState']>;\nexport type AppDispatch = AppStore['dispatch'];"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;YACP,MAAM,2IAAA,CAAA,UAAW;QACnB;IACF;AACF","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/providers/StoreProvider.tsx"],"sourcesContent":["'use client';\n\nimport { useRef } from 'react';\nimport { Provider } from 'react-redux';\nimport { makeStore, AppStore } from '../lib/store';\n\nexport function StoreProvider({ children }: { children: React.ReactNode }) {\n  const storeRef = useRef<AppStore | undefined>(undefined);\n  if (!storeRef.current) {\n    storeRef.current = makeStore();\n  }\n\n  return <Provider store={storeRef.current}>{children}</Provider>;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IAC9C,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,SAAS,OAAO,GAAG,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD;IAC7B;IAEA,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/emotion-cache.ts"],"sourcesContent":["import createCache from '@emotion/cache';\n\nconst isBrowser = typeof document !== 'undefined';\n\n// On the client side, Create a meta tag at the top of the <head> and set it as insertionPoint.\n// This assures that MUI styles are loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nexport default function createEmotionCache() {\n  let insertionPoint;\n\n  if (isBrowser) {\n    const emotionInsertionPoint = document.querySelector<HTMLMetaElement>(\n      'meta[name=\"emotion-insertion-point\"]',\n    );\n    insertionPoint = emotionInsertionPoint ?? undefined;\n  }\n\n  return createCache({ key: 'mui-style', insertionPoint });\n}"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,OAAO,aAAa;AAKvB,SAAS;IACtB,IAAI;IAEJ,IAAI,WAAW;QACb,MAAM,wBAAwB,SAAS,aAAa,CAClD;QAEF,iBAAiB,yBAAyB;IAC5C;IAEA,OAAO,CAAA,GAAA,oLAAA,CAAA,UAAW,AAAD,EAAE;QAAE,KAAK;QAAa;IAAe;AACxD","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/providers/ThemeProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionCache from '../lib/emotion-cache';\nimport { useState } from 'react';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\n// Client-side cache, created on client side only\nconst clientSideEmotionCache = createEmotionCache();\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [emotionCache] = useState(clientSideEmotionCache);\n\n  return (\n    <CacheProvider value={emotionCache}>\n      <MUIThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </CacheProvider>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,QAAQ,CAAA,GAAA,2MAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;IACF;AACF;AAEA,iDAAiD;AACjD,MAAM,yBAAyB,CAAA,GAAA,8HAAA,CAAA,UAAkB,AAAD;AAEzC,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,CAAC,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEhC,qBACE,8OAAC,wOAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,8OAAC,+MAAA,CAAA,gBAAgB;YAAC,OAAO;;8BACvB,8OAAC,gNAAA,CAAA,cAAW;;;;;gBACX;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/lib/hooks.ts"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"names":[],"mappings":";;;;AAAA;;AAIO,MAAM,iBAAiB,IAAM,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;AACvC,MAAM,iBAAkD,yJAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/rexliu/staff-mgmt-tool/frontend/src/components/AuthInitializer.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useAppDispatch } from '../lib/hooks';\nimport { initializeAuth, fetchUserProfile } from '../lib/features/auth/authSlice';\n\nexport function AuthInitializer() {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    // Only run on client side to avoid hydration mismatch\n    console.log('🔧 AuthInitializer: Checking localStorage for token...');\n    const token = localStorage.getItem('token');\n    console.log('🎟️ Found token:', token ? 'YES' : 'NO');\n    \n    dispatch(initializeAuth({ token }));\n    console.log('✅ AuthInitializer: Dispatched initializeAuth');\n    \n    // If we have a token, fetch the user profile\n    if (token) {\n      console.log('👤 AuthInitializer: Fetching user profile...');\n      dispatch(fetchUserProfile());\n    }\n  }, [dispatch]);\n\n  return null; // This component doesn't render anything\n}"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAJA;;;;AAMO,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD;IAE9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,sDAAsD;QACtD,QAAQ,GAAG,CAAC;QACZ,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,QAAQ,GAAG,CAAC,oBAAoB,QAAQ,QAAQ;QAEhD,SAAS,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD,EAAE;YAAE;QAAM;QAChC,QAAQ,GAAG,CAAC;QAEZ,6CAA6C;QAC7C,IAAI,OAAO;YACT,QAAQ,GAAG,CAAC;YACZ,SAAS,CAAA,GAAA,2IAAA,CAAA,mBAAgB,AAAD;QAC1B;IACF,GAAG;QAAC;KAAS;IAEb,OAAO,MAAM,yCAAyC;AACxD","debugId":null}}]
}